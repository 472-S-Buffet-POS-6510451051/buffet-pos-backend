definitions:
  models.Role:
    enum:
    - manager
    - employee
    type: string
    x-enum-varnames:
    - Manager
    - Employee
  requests.AddCategoryRequest:
    properties:
      categoryName:
        type: string
    required:
    - categoryName
    type: object
  requests.AddTableRequest:
    properties:
      tableName:
        type: string
    required:
    - tableName
    type: object
  requests.EditTableRequest:
    properties:
      id:
        type: string
      tableName:
        type: string
    required:
    - id
    - tableName
    type: object
  requests.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  requests.UserRegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  responses.CategoryDetail:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  responses.MenuDetail:
    properties:
      categoryId:
        type: string
      description:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      isAvailable:
        type: boolean
      name:
        type: string
    type: object
  responses.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  responses.TableDetail:
    properties:
      accessCode:
        type: string
      createdAt:
        type: string
      id:
        type: string
      isAvailable:
        type: boolean
      qrcode:
        type: string
      tableName:
        type: string
      updatedAt:
        type: string
    type: object
  responses.UserLoginResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      token:
        type: string
    type: object
  responses.UserRegisterResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is the BuffetPOS API documentation.
  title: BuffetPOS API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Check user credentials and return user data.
      parameters:
      - description: User login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserLoginResponse'
      summary: User login.
      tags:
      - User
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user.
      parameters:
      - description: User register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserRegisterResponse'
      summary: User register (Employee Role by default)
      tags:
      - User
  /manage/categories:
    get:
      consumes:
      - application/json
      description: Find all categories.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.CategoryDetail'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Find All Categories
      tags:
      - Manage
    post:
      consumes:
      - application/json
      description: Add a new category.
      parameters:
      - description: Add Category request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AddCategoryRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Add Category
      tags:
      - Manage
  /manage/categories/{id}:
    get:
      consumes:
      - application/json
      description: Find category by ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.CategoryDetail'
      security:
      - ApiKeyAuth: []
      summary: Find Category By ID
      tags:
      - Manage
  /manage/menus:
    get:
      consumes:
      - application/json
      description: Find all menus.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.MenuDetail'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Find All Menus
      tags:
      - Manage
    post:
      consumes:
      - multipart/form-data
      description: Add a new menu.
      parameters:
      - in: formData
        name: categoryId
        type: string
      - in: formData
        name: description
        type: string
      - in: formData
        name: isAvailable
        required: true
        type: boolean
      - in: formData
        name: name
        required: true
        type: string
      - description: Menu Image
        in: formData
        name: image
        required: true
        type: file
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Add Menu
      tags:
      - Manage
  /manage/menus/{id}:
    get:
      consumes:
      - application/json
      description: Find menu by ID.
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.MenuDetail'
      security:
      - ApiKeyAuth: []
      summary: Find Menu By ID
      tags:
      - Manage
  /manage/tables:
    get:
      consumes:
      - application/json
      description: Find all tables.
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TableDetail'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Find All Tables
      tags:
      - Manage
    post:
      consumes:
      - application/json
      description: Add a new table.
      parameters:
      - description: Add Table request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AddTableRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Add Table
      tags:
      - Manage
    put:
      consumes:
      - application/json
      description: Edit Table by ID.
      parameters:
      - description: Edit Table Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.EditTableRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - ApiKeyAuth: []
      summary: Edit Table
      tags:
      - Manage
  /manage/tables/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Table by ID.
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
      security:
      - Api: []
      summary: Delete Table
      tags:
      - Manage
    get:
      consumes:
      - application/json
      description: Find table by ID.
      parameters:
      - description: Table ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TableDetail'
      security:
      - ApiKeyAuth: []
      summary: Find Table By ID
      tags:
      - Manage
swagger: "2.0"
